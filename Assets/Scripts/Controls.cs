//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""405f976b-5fde-4690-b583-3d122a32f161"",
            ""actions"": [
                {
                    ""name"": ""ShootProjectile"",
                    ""type"": ""Button"",
                    ""id"": ""0620b802-60bb-4e35-862d-2d1cdc14646f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tentacle1"",
                    ""type"": ""Button"",
                    ""id"": ""84e1940a-9886-42dd-845a-2de02cfd5cef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tentacle2"",
                    ""type"": ""Button"",
                    ""id"": ""ee82bc00-e9ea-4369-ba94-87d3f02cca5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tentacle3"",
                    ""type"": ""Button"",
                    ""id"": ""f4171419-cb82-4f00-a47f-f5b88ffd31ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tentacle4"",
                    ""type"": ""Button"",
                    ""id"": ""36150358-87f3-4ff3-b861-d843db582000"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""699ff9e0-dbd4-4550-9ea4-f5f7ac7ca791"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootProjectile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""309d7402-27da-4e2d-8c95-fbffd4bda40c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootProjectile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39b52624-7ee8-476f-9cdf-1559a9ed07d7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tentacle1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97f6e591-91ca-411d-b66f-d7dbba852770"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tentacle2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b84881eb-bbbf-43db-b036-d7037b908591"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tentacle3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e99fd67-1584-4a26-9f24-b9835af7a122"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tentacle4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_ShootProjectile = m_Keyboard.FindAction("ShootProjectile", throwIfNotFound: true);
        m_Keyboard_Tentacle1 = m_Keyboard.FindAction("Tentacle1", throwIfNotFound: true);
        m_Keyboard_Tentacle2 = m_Keyboard.FindAction("Tentacle2", throwIfNotFound: true);
        m_Keyboard_Tentacle3 = m_Keyboard.FindAction("Tentacle3", throwIfNotFound: true);
        m_Keyboard_Tentacle4 = m_Keyboard.FindAction("Tentacle4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private List<IKeyboardActions> m_KeyboardActionsCallbackInterfaces = new List<IKeyboardActions>();
    private readonly InputAction m_Keyboard_ShootProjectile;
    private readonly InputAction m_Keyboard_Tentacle1;
    private readonly InputAction m_Keyboard_Tentacle2;
    private readonly InputAction m_Keyboard_Tentacle3;
    private readonly InputAction m_Keyboard_Tentacle4;
    public struct KeyboardActions
    {
        private @Controls m_Wrapper;
        public KeyboardActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShootProjectile => m_Wrapper.m_Keyboard_ShootProjectile;
        public InputAction @Tentacle1 => m_Wrapper.m_Keyboard_Tentacle1;
        public InputAction @Tentacle2 => m_Wrapper.m_Keyboard_Tentacle2;
        public InputAction @Tentacle3 => m_Wrapper.m_Keyboard_Tentacle3;
        public InputAction @Tentacle4 => m_Wrapper.m_Keyboard_Tentacle4;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void AddCallbacks(IKeyboardActions instance)
        {
            if (instance == null || m_Wrapper.m_KeyboardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_KeyboardActionsCallbackInterfaces.Add(instance);
            @ShootProjectile.started += instance.OnShootProjectile;
            @ShootProjectile.performed += instance.OnShootProjectile;
            @ShootProjectile.canceled += instance.OnShootProjectile;
            @Tentacle1.started += instance.OnTentacle1;
            @Tentacle1.performed += instance.OnTentacle1;
            @Tentacle1.canceled += instance.OnTentacle1;
            @Tentacle2.started += instance.OnTentacle2;
            @Tentacle2.performed += instance.OnTentacle2;
            @Tentacle2.canceled += instance.OnTentacle2;
            @Tentacle3.started += instance.OnTentacle3;
            @Tentacle3.performed += instance.OnTentacle3;
            @Tentacle3.canceled += instance.OnTentacle3;
            @Tentacle4.started += instance.OnTentacle4;
            @Tentacle4.performed += instance.OnTentacle4;
            @Tentacle4.canceled += instance.OnTentacle4;
        }

        private void UnregisterCallbacks(IKeyboardActions instance)
        {
            @ShootProjectile.started -= instance.OnShootProjectile;
            @ShootProjectile.performed -= instance.OnShootProjectile;
            @ShootProjectile.canceled -= instance.OnShootProjectile;
            @Tentacle1.started -= instance.OnTentacle1;
            @Tentacle1.performed -= instance.OnTentacle1;
            @Tentacle1.canceled -= instance.OnTentacle1;
            @Tentacle2.started -= instance.OnTentacle2;
            @Tentacle2.performed -= instance.OnTentacle2;
            @Tentacle2.canceled -= instance.OnTentacle2;
            @Tentacle3.started -= instance.OnTentacle3;
            @Tentacle3.performed -= instance.OnTentacle3;
            @Tentacle3.canceled -= instance.OnTentacle3;
            @Tentacle4.started -= instance.OnTentacle4;
            @Tentacle4.performed -= instance.OnTentacle4;
            @Tentacle4.canceled -= instance.OnTentacle4;
        }

        public void RemoveCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyboardActions instance)
        {
            foreach (var item in m_Wrapper.m_KeyboardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_KeyboardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IKeyboardActions
    {
        void OnShootProjectile(InputAction.CallbackContext context);
        void OnTentacle1(InputAction.CallbackContext context);
        void OnTentacle2(InputAction.CallbackContext context);
        void OnTentacle3(InputAction.CallbackContext context);
        void OnTentacle4(InputAction.CallbackContext context);
    }
}
